{"version":3,"sources":["webpack:///./src/components/Card/Card.jsx","webpack:///./src/components/Slider/Slider.jsx","webpack:///./src/components/Episodes/components/Episode/Episode.jsx","webpack:///./src/components/Episodes/Episodes.jsx","webpack:///./src/components/Carousel/Carousel.jsx","webpack:///./src/pages/index.js","webpack:///./src/components/Subscribe/Subscribe.jsx"],"names":["Card","props","className","data","frontmatter","author","date","location","title","excerpt","style","text","Slider","cards","useStaticQuery","allMarkdownRemark","edges","map","card","index","node","key","href","icon","faArrowLeft","faArrowRight","Episode","src","image","AudioPlayer","audio","season","tags","join","Episodes","allEpisodes","allEpisodesJson","nodes","createEpisodes","arr","episode","id","publicURL","useState","slice","episodes","setEpisodes","loadMore","setLoadMore","length","hasMore","setHasMore","useEffect","currentLength","nextResults","isMore","latest","undefined","Button","onClick","navigate","Carousel","feeds","feed","faLink","Header","hero","Subscribe","subtitle","Footer","ButtonText","action","type","placeholder"],"mappings":"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","file":"component---src-pages-index-js-08e102c6e18f02ea4a2c.js","sourcesContent":["import React from \"react\";\nimport { Button } from \"../Button/Button\";\n\nimport \"./card.scss\";\n\nexport const Card = (props) => {\n    return (\n        <div className=\"post-card\">\n            <div className=\"meta-data\">\n                <span className=\"author\">{props.data.frontmatter.author}</span>\n                <span className=\"date\">{props.data.frontmatter.date}</span>\n                <span className=\"location\">{props.data.frontmatter.location}</span>\n            </div>\n            <h3>{props.data.frontmatter.title}</h3>\n            <p>{props.data.excerpt}</p>\n            <div className=\"read-more\"><Button style=\"secondary\" text=\"Read more\" /></div>\n        </div>\n    )\n}","import { faArrowLeft, faArrowRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport React from \"react\";\nimport { Card } from \"../Card/Card\";\n\nimport \"./slider.scss\";\n\nexport const Slider = (props) => {\n    \n    const cardData = useStaticQuery(graphql`\n    {\n      allMarkdownRemark(limit: 3) {\n        edges {\n          node {\n            excerpt\n            frontmatter {\n              author\n              date(formatString: \"MMM D, YYYY\")\n              location\n              title\n            }\n          }\n        }\n      }\n    }\n  `)\n\n    const cards = cardData.allMarkdownRemark.edges.map((card, index) => <Card data={card.node} key={index} />);\n    return (\n        <div className=\"slider-container\">\n            <h2>{props.title}</h2>\n            <div className=\"slider\">\n                {cards}\n            </div>\n            <div className=\"arrows\">\n                <a href=\"\"><FontAwesomeIcon icon={faArrowLeft} /></a>\n                <a href=\"\"><FontAwesomeIcon icon={faArrowRight} /></a>\n            </div>\n        </div>\n    )\n}","import React from \"react\";\nimport {AudioPlayer} from \"../../../AudioPlayer/AudioPlayer\";\n\nimport \"./_episode.scss\";\n\nexport const Episode = (props) => {\n    return (\n        <div className=\"episode\">\n            <img src={props.image} />\n            <div className=\"episode-content\">\n                <h3>{props.title}</h3>\n                <p>{props.text}</p>\n                <AudioPlayer audio={props.audio} />\n            </div>\n            <div className=\"meta\"><span className=\"tag\">{`Season ${props.season}`}</span><span className=\"tag\">{`Posted on ${props.date}`}</span><span className=\"tag\">{props.tags.join(\" / \")}</span></div>\n        </div>\n    )\n}","import { graphql, navigate, useStaticQuery } from \"gatsby\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button } from \"../Button/Button\";\nimport { Episode } from \"./components/Episode/Episode\";\n\nimport \"./episodes.scss\";\n\nexport const Episodes = (props) => {\n\n    const {allEpisodesJson:{nodes:allEpisodes}} = useStaticQuery(graphql`\n    {\n      allEpisodesJson {\n        nodes {\n          title\n          audio {\n            publicURL\n          }\n          date(formatString: \"MMM D, YYYY\")\n          tags\n          text\n          season\n          image {\n            publicURL\n          }\n        }\n      }\n    }\n  `);\n\n  // Create array of Episode components from list of json data episodes\n    const createEpisodes = (arr) => arr.map((episode) => <Episode key={episode.id} {...episode} image={episode.image.publicURL} audio={episode.audio.publicURL} />);\n\n    // State for the list with initial first 3 episodes\n    const [episodes,setEpisodes] = useState(createEpisodes([...allEpisodes.slice(0,3)]));\n\n    // State to trigger load more\n    const [loadMore, setLoadMore] = useState(false);\n\n    // State whether there is more to load\n    const [hasMore,setHasMore] = useState(allEpisodes.length > 3);\n\n    // Load more button click\n    const handleLoadMore = () => {\n        setLoadMore(true);\n    }\n\n    // Handle loading more episodes\n    useEffect(() => {\n        if(loadMore && hasMore) {\n            const currentLength = episodes.length\n            const isMore = currentLength < allEpisodes.length\n            const nextResults = isMore ? allEpisodes.slice(currentLength, currentLength + 3) : []\n            setEpisodes([...episodes, ...createEpisodes([...nextResults])])\n            setLoadMore(false)\n        }\n    },[loadMore, hasMore]);\n\n    //Check if there is more\n    useEffect(() => {\n        const isMore = episodes.length < allEpisodes.length\n        setHasMore(isMore)\n    }, [episodes])\n\n    return (        \n        episodes.length ? \n        <section className=\"episodes-container\">\n            <div className=\"top\">\n                <h2 className={!props.latest ? \"single\" : undefined}>{props.title}</h2>\n                {props.latest && <Button style=\"primary\" text=\"View All\" onClick={() => navigate(\"/episodes\")}/>}\n            </div>\n            {episodes}\n            {hasMore &&\n            <div className=\"more\">\n                <Button style=\"secondary\" text=\"Show more episodes\" onClick={handleLoadMore} />\n            </div>}\n        </section>\n        : null\n    )\n}","import { faLink } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useState } from \"react\";\n\nimport \"./carousel.scss\";\n\nexport const Carousel = (props) => {\n    const [feeds, getFeeds] = useState([\n        \"/images/75095@2x.png\",\n        \"/images/mike-dorner-sf_1ZDA1YFw-unsplash@2x.png\",\n        \"/images/1683@2x.png\",\n        \"/images/2857@2x.png\",\n        \"/images/sina-katirachi-sj5nVJSfYl4-unsplash@2x.png\",\n        \"/images/451@2x.png\",\n        \"/images/markus-spiske-UJwcQ3xeFHo-unsplash@2x.png\",\n        \"/images/1841@2x.png\",\n        \"/images/15@2x.png\",\n        \"/images/1670@2x.png\"\n    ]);\n\n    return (\n        <div className=\"carousel-container\">\n            <h2>{props.title}</h2>\n            <div className=\"feeds-box\">\n                {\n                    feeds.map((feed, index) =>\n                        <div className=\"feed\" key={index}><img src={feed} />\n                            <div className=\"overlay\"><a href=\"\"><FontAwesomeIcon icon={faLink} className=\"link\" /></a></div>\n                        </div>)\n                }\n            </div>\n        </div>\n    )\n}","import React from \"react\";\nimport { Episodes } from \"../components/Episodes/Episodes\";\n\nimport \"./home.scss\";\n\nimport { Slider } from \"../components/Slider/Slider\";\nimport { Carousel } from \"../components/Carousel/Carousel\";\nimport { Subscribe } from \"../components/Subscribe/Subscribe\";\nimport { Header } from \"../components/Header/Header\";\nimport { Footer } from \"../components/Footer/Footer\";\n\nexport default () => {\n    return (\n        <>\n            <Header hero />\n            <Episodes title=\"Latest Episodes\" latest={true} />\n            <Slider title=\"Blog Posts\" />\n            <Carousel />\n            <Subscribe title=\"New Episode Every Week!\" subtitle=\"Loremipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed.\" />\n            <Footer />\n        </>\n    )\n}","import { faArrowRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { Button } from \"../Button/Button\";\n\nimport \"./subscribe.scss\";\n\nconst ButtonText = (props) => {\n    return (\n        <>\n            {props.text}\n            <FontAwesomeIcon icon={props.icon} />\n        </>\n    )\n}\n\nexport const Subscribe = (props) => {\n    return (\n        <section className=\"subscribe\">\n            <h2>{props.title}</h2>\n            <p>{props.subtitle}</p>\n            <div className=\"cta-subscribe\">\n                <form action=\"\">\n                    <input type=\"email\" placeholder=\"Type Your Email\" />\n                    <Button type=\"submit\" style=\"primary\" text={<ButtonText text=\"Subscribe \" icon={faArrowRight} />} />\n                </form>\n            </div>\n        </section>\n    )\n}"],"sourceRoot":""}