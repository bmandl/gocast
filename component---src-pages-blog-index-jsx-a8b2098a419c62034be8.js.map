{"version":3,"sources":["webpack:///./src/components/Card/Card.jsx","webpack:///./src/components/CardGrid/CardGrid.jsx","webpack:///./src/pages/blog/index.jsx","webpack:///./src/components/PageLayout/PageLayout.jsx","webpack:///./src/components/Subscribe/Subscribe.jsx"],"names":["Card","data","className","frontmatter","author","date","location","title","excerpt","to","slug","styling","text","propTypes","PropTypes","shape","string","instanceOf","Date","isRequired","CardGrid","cards","map","card","index","key","arrayOf","Object","Blog","cardData","allMarkdownRemark","nodes","PageLayout","page","Subscribe","subtitle","objectOf","hero","children","bool","oneOfType","node","defaultProps","ButtonText","icon","element","action","type","placeholder","submit","stylying","faArrowRight"],"mappings":"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","file":"component---src-pages-blog-index-jsx-a8b2098a419c62034be8.js","sourcesContent":["import { Link } from 'gatsby';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '../Button/Button';\n\nimport './card.scss';\n\nconst Card = ({ data }) => (\n  <div className=\"post-card\">\n    <div className=\"meta-data\">\n      <span className=\"author\">{data.frontmatter.author}</span>\n      <span className=\"date\">{data.frontmatter.date}</span>\n      <span className=\"location\">{data.frontmatter.location}</span>\n    </div>\n    <h3>{data.frontmatter.title}</h3>\n    <p>{data.excerpt}</p>\n    <div className=\"read-more\">\n      <Link to={`/blog/${data.frontmatter.slug}`}>\n        <Button styling=\"secondary\" text=\"Read more\" />\n      </Link>\n    </div>\n  </div>\n);\n\nCard.propTypes = {\n  data: PropTypes.shape({\n    frontmatter: PropTypes.shape({\n      author: PropTypes.string,\n      date: PropTypes.instanceOf(Date),\n      location: PropTypes.string,\n      title: PropTypes.string,\n      slug: PropTypes.string,\n    }).isRequired,\n    excerpt: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Card;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Card from '../Card/Card';\n\nimport './CardGrid.scss';\n\nconst CardGrid = ({ data }) => {\n  // eslint-disable-next-line react/no-array-index-key\n  const cards = data.map((card, index) => <Card data={card} key={index} />);\n\n  return <div className=\"card-grid\">{cards}</div>;\n};\n\nCardGrid.propTypes = {\n  data: PropTypes.arrayOf(Object).isRequired,\n};\n\nexport default CardGrid;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\nimport CardGrid from '../../components/CardGrid/CardGrid';\nimport PageLayout from '../../components/PageLayout/PageLayout';\nimport Subscribe from '../../components/Subscribe/Subscribe';\n\nimport './blog.scss';\n\nexport default function Blog({ data }) {\n  const cardData = data.allMarkdownRemark.nodes;\n  return (\n    <PageLayout title=\"Blog\" page>\n      <section className=\"blog-posts\">\n        <h2>Blog Posts</h2>\n        <div className=\"grid-container\">\n          <CardGrid data={cardData} />\n        </div>\n        <Subscribe\n          title=\"New Episode Every Week!\"\n          subtitle=\"Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed.\"\n        />\n      </section>\n    </PageLayout>\n  );\n}\n\nBlog.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.objectOf({\n      nodes: PropTypes.arrayOf({\n        frontmatter: PropTypes.objectOf({\n          author: PropTypes.string,\n          date: PropTypes.instanceOf(Date),\n          location: PropTypes.string,\n          title: PropTypes.string,\n          slug: PropTypes.string,\n        }),\n        excerpt: PropTypes.string.isRequired,\n      }),\n    }),\n  }).isRequired,\n};\n\nexport const query = graphql`\n  {\n    allMarkdownRemark {\n      nodes {\n        frontmatter {\n          author\n          date(formatString: \"MMM D, YYYY\")\n          location\n          title\n          slug\n        }\n        excerpt(pruneLength: 200)\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../Header/Header';\nimport Footer from '../Footer/Footer';\n\nconst PageLayout = ({\n  hero, page, title, children,\n}) => (\n  <>\n    <Header hero={hero} page={page} title={title} />\n    {children}\n    <Footer />\n  </>\n);\n\nPageLayout.propTypes = {\n  hero: PropTypes.bool,\n  page: PropTypes.bool,\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\n};\n\nPageLayout.defaultProps = {\n  hero: false,\n  page: true,\n};\n\nexport default PageLayout;\n","import { faArrowRight } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '../Button/Button';\n\nimport './subscribe.scss';\n\nconst ButtonText = ({ text, icon }) => (\n  <>\n    {text}\n    <FontAwesomeIcon icon={icon} />\n  </>\n);\n\nButtonText.propTypes = {\n  text: PropTypes.string.isRequired,\n  icon: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n};\n\nButtonText.defaultProps = {\n  icon: '',\n};\n\nconst Subscribe = ({ title, subtitle }) => (\n  <section className=\"subscribe\">\n    <h2>{title}</h2>\n    <p>{subtitle}</p>\n    <div className=\"cta-subscribe\">\n      <form action=\"\">\n        <input type=\"email\" placeholder=\"Type Your Email\" />\n        <Button\n          submit\n          stylying=\"primary\"\n          text={<ButtonText text=\"Subscribe \" icon={faArrowRight} />}\n        />\n      </form>\n    </div>\n  </section>\n);\n\nSubscribe.propTypes = {\n  title: PropTypes.string.isRequired,\n  subtitle: PropTypes.string.isRequired,\n};\n\nexport default Subscribe;\n"],"sourceRoot":""}