{"version":3,"sources":["webpack:///./src/components/Comments/components/Comment/Comment.jsx","webpack:///./src/components/Comments/Comments.jsx","webpack:///./src/pages/blog/{MarkdownRemark.frontmatter__slug}.jsx","webpack:///./src/components/PageLayout/PageLayout.jsx"],"names":["Comment","image","author","text","date","className","src","alt","Button","styling","icon","faShare","customClass","toDateString","propTypes","PropTypes","string","isRequired","instanceOf","Date","Comments","useState","id","comments","length","Array","from","comment","key","action","name","cols","rows","placeholder","type","htmlFor","submit","Post","data","metaData","markdownRemark","frontmatter","content","html","PageLayout","page","title","location","dangerouslySetInnerHTML","__html","shape","objectOf","hero","children","bool","oneOfType","arrayOf","node","defaultProps"],"mappings":"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","file":"component---src-pages-blog-markdown-remark-frontmatter-slug-jsx-bc7eab7cbd32108ef9e8.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { faShare } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Button from '../../../Button/Button';\n\nimport './comment.scss';\n\nconst Comment = ({\n  image, author, text, date,\n}) => (\n  <div className=\"comment\">\n    <img src={image} alt=\"\" className=\"profile-image\" />\n    <div className=\"comment-content\">\n      <h4 className=\"author\">{author}</h4>\n      <p className=\"text\">{text}</p>\n    </div>\n    <Button\n      styling=\"secondary\"\n      text={['Reply ', <FontAwesomeIcon icon={faShare} />]}\n      customClass=\"reply\"\n    />\n    <p className=\"date\">{date.toDateString()}</p>\n  </div>\n);\n\nComment.propTypes = {\n  image: PropTypes.string.isRequired,\n  author: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  date: PropTypes.instanceOf(Date).isRequired,\n};\n\nexport default Comment;\n","import React, { useState, useEffect } from 'react';\n\nimport Comment from './components/Comment/Comment';\nimport Button from '../Button/Button';\n\nimport './comments.scss';\n\nconst Comments = () => {\n  const [comments, setComments] = useState([\n    {\n      id: 0,\n      author: 'Anthony Lynch',\n      image: '/images/profile.png',\n      date: new Date('15 June 2019'),\n      text:\n        'Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy sdaa eirmod tempor invidunt ut labore et .',\n    },\n    {\n      id: 1,\n      author: 'Anthony Lynch',\n      image: '/images/profile.png',\n      date: new Date('15 June 2019'),\n      text:\n        'Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy sdaa eirmod tempor invidunt ut labore et .',\n    },\n    {\n      id: 3,\n      author: 'Anthony Lynch',\n      image: '/images/profile.png',\n      date: new Date('15 June 2019'),\n      text:\n        'Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy sdaa eirmod tempor invidunt ut labore et .',\n    },\n  ]);\n\n  /* useEffect(() => {\n    setComments(\n      Array.from(comments, (comment) => (\n        <Comment\n          author={comment.author}\n          text={comment.text}\n          date={comment.date}\n          image={comment.image}\n          key={comment.id}\n        />\n      )),\n    );\n  }, []); */\n\n  return (\n    <section className=\"comments\">\n      <h3>Comments</h3>\n      <div className=\"comments-container\">\n        {comments.length\n          ? Array.from(comments, (comment) => (\n            <Comment\n              author={comment.author}\n              text={comment.text}\n              date={comment.date}\n              image={comment.image}\n              key={comment.id}\n            />\n          ))\n          : 'No comments to display'}\n      </div>\n      <div className=\"form-reply\">\n        <h3>Leave a reply</h3>\n        <form action=\"#\">\n          <textarea name=\"reply\" id=\"reply\" cols=\"30\" rows=\"10\" placeholder=\"Your Reply\" />\n          <input type=\"text\" name=\"name\" placeholder=\"Your Name\" />\n          <input type=\"email\" name=\"email\" placeholder=\"Your Email\" />\n          <label htmlFor=\"save\">\n            <input type=\"checkbox\" id=\"save\" name=\"save\" />\n            Save my name, email, and website in this browser for the next time I comment.\n          </label>\n          <Button submit styling=\"primary\" text=\"Post Comment\" />\n        </form>\n      </div>\n    </section>\n  );\n};\n\nexport default Comments;\n","/* eslint-disable react/no-danger */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\n\nimport Comments from '../../components/Comments/Comments';\nimport PageLayout from '../../components/PageLayout/PageLayout';\n\nimport './post.scss';\n\nexport default function Post({ data }) {\n  const metaData = data.markdownRemark.frontmatter;\n  const content = data.markdownRemark.html;\n\n  return (\n    <PageLayout page={false}>\n      <section className=\"post-content\">\n        <h2>{metaData.title}</h2>\n        <div className=\"meta-data\">\n          <span className=\"author\">{metaData.author}</span>\n          <span className=\"date\">{metaData.date}</span>\n          <span className=\"location\">{metaData.location}</span>\n        </div>\n        <div className=\"post-text\" dangerouslySetInnerHTML={{ __html: content }} />\n      </section>\n      <Comments />\n    </PageLayout>\n  );\n}\n\nPost.propTypes = {\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.objectOf({\n      frontmatter: PropTypes.objectOf({\n        author: PropTypes.string,\n        date: PropTypes.instanceOf(Date),\n        title: PropTypes.string,\n        location: PropTypes.string,\n      }),\n      html: PropTypes.string.isRequired,\n    }),\n  }).isRequired,\n};\n\nexport const query = graphql`\n  {\n    markdownRemark {\n      frontmatter {\n        author\n        date(formatString: \"MMM D, YYYY\")\n        title\n        location\n      }\n      html\n    }\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../Header/Header';\nimport Footer from '../Footer/Footer';\n\nconst PageLayout = ({\n  hero, page, title, children,\n}) => (\n  <>\n    <Header hero={hero} page={page} title={title} />\n    {children}\n    <Footer />\n  </>\n);\n\nPageLayout.propTypes = {\n  hero: PropTypes.bool,\n  page: PropTypes.bool,\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\n};\n\nPageLayout.defaultProps = {\n  hero: false,\n  page: true,\n};\n\nexport default PageLayout;\n"],"sourceRoot":""}