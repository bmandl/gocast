{"version":3,"sources":["webpack:///./src/components/Card/Card.jsx","webpack:///./src/components/Carousel/Carousel.jsx","webpack:///./src/pages/index.jsx","webpack:///./src/components/Slider/Slider.jsx","webpack:///./src/components/Episodes/components/Episode/Episode.jsx","webpack:///./src/components/Episodes/Episodes.jsx","webpack:///./src/components/Subscribe/Subscribe.jsx"],"names":["Card","data","className","frontmatter","author","date","location","title","excerpt","to","slug","styling","text","propTypes","PropTypes","shape","string","instanceOf","Date","isRequired","Carousel","useState","feeds","map","feed","index","key","src","href","icon","faLink","Header","hero","Episodes","latest","Slider","Subscribe","subtitle","Footer","cards","useStaticQuery","allMarkdownRemark","edges","card","node","id","faArrowLeft","faArrowRight","Episode","image","audio","season","tags","alt","AudioPlayer","join","arrayOf","allEpisodes","allEpisodesJson","nodes","createEpisodes","arr","episode","publicURL","slice","episodes","setEpisodes","loadMore","setLoadMore","length","hasMore","setHasMore","useEffect","currentLength","nextResults","isMore","undefined","Button","stylying","onClick","navigate","bool","defaultProps","ButtonText","oneOfType","element","action","type","placeholder","submit"],"mappings":"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","file":"component---src-pages-index-jsx-7cb77bc13316bf6b693d.js","sourcesContent":["import { Link } from 'gatsby';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '../Button/Button';\n\nimport './card.scss';\n\nconst Card = ({ data }) => (\n  <div className=\"post-card\">\n    <div className=\"meta-data\">\n      <span className=\"author\">{data.frontmatter.author}</span>\n      <span className=\"date\">{data.frontmatter.date}</span>\n      <span className=\"location\">{data.frontmatter.location}</span>\n    </div>\n    <h3>{data.frontmatter.title}</h3>\n    <p>{data.excerpt}</p>\n    <div className=\"read-more\">\n      <Link to={`/blog/${data.frontmatter.slug}`}>\n        <Button styling=\"secondary\" text=\"Read more\" />\n      </Link>\n    </div>\n  </div>\n);\n\nCard.propTypes = {\n  data: PropTypes.shape({\n    frontmatter: PropTypes.shape({\n      author: PropTypes.string,\n      date: PropTypes.instanceOf(Date),\n      location: PropTypes.string,\n      title: PropTypes.string,\n      slug: PropTypes.string,\n    }).isRequired,\n    excerpt: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Card;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable jsx-a11y/alt-text */\nimport { faLink } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './carousel.scss';\n\nconst Carousel = ({ title }) => {\n  // feeds should be fetched from external source\n  // eslint-disable-next-line no-unused-vars\n  const [feeds, getFeeds] = useState([\n    '/images/75095@2x.png',\n    '/images/mike-dorner-sf_1ZDA1YFw-unsplash@2x.png',\n    '/images/1683@2x.png',\n    '/images/2857@2x.png',\n    '/images/sina-katirachi-sj5nVJSfYl4-unsplash@2x.png',\n    '/images/451@2x.png',\n    '/images/markus-spiske-UJwcQ3xeFHo-unsplash@2x.png',\n    '/images/1841@2x.png',\n    '/images/15@2x.png',\n    '/images/1670@2x.png',\n  ]);\n\n  return (\n    <div className=\"carousel-container\">\n      <h2>{title}</h2>\n      <div className=\"feeds-box\">\n        {feeds.map((feed, index) => (\n          // eslint-disable-next-line react/no-array-index-key\n          <div className=\"feed\" key={index}>\n            <img src={feed} />\n            <div className=\"overlay\">\n              <a href=\"\">\n                <FontAwesomeIcon icon={faLink} className=\"link\" />\n              </a>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nCarousel.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Carousel;\n","import React from 'react';\nimport Episodes from '../components/Episodes/Episodes';\n\nimport './home.scss';\n\nimport Slider from '../components/Slider/Slider';\nimport Carousel from '../components/Carousel/Carousel';\nimport Subscribe from '../components/Subscribe/Subscribe';\nimport Header from '../components/Header/Header';\nimport Footer from '../components/Footer/Footer';\n\nexport default () => (\n  <>\n    <Header hero />\n    <Episodes title=\"Latest Episodes\" latest />\n    <Slider title=\"Blog Posts\" />\n    <Carousel />\n    <Subscribe\n      title=\"New Episode Every Week!\"\n      subtitle=\"Loremipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed.\"\n    />\n    <Footer />\n  </>\n);\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport { faArrowLeft, faArrowRight } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Card from '../Card/Card';\n\nimport './slider.scss';\n\nconst Slider = ({ title }) => {\n  const cardData = useStaticQuery(graphql`\n    {\n      allMarkdownRemark(limit: 3) {\n        edges {\n          node {\n            excerpt\n            frontmatter {\n              author\n              date(formatString: \"MMM D, YYYY\")\n              location\n              title\n              slug\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const cards = cardData.allMarkdownRemark.edges.map((card) => (\n    <Card data={card.node} key={card.node.id} />\n  ));\n  return (\n    <div className=\"slider-container\">\n      <h2>{title}</h2>\n      <div className=\"slider\">{cards}</div>\n      <div className=\"arrows\">\n        <a href=\"\">\n          <FontAwesomeIcon icon={faArrowLeft} />\n        </a>\n        <a href=\"\">\n          <FontAwesomeIcon icon={faArrowRight} />\n        </a>\n      </div>\n    </div>\n  );\n};\n\nSlider.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Slider;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport AudioPlayer from '../../../AudioPlayer/AudioPlayer';\n\nimport './_episode.scss';\n\nconst Episode = ({\n  image, title, text, audio, season, date, tags,\n}) => (\n  <div className=\"episode\">\n    <img alt=\"Episode\" src={image} />\n    <div className=\"episode-content\">\n      <h3>{title}</h3>\n      <p>{text}</p>\n      <AudioPlayer audio={audio} />\n    </div>\n    <div className=\"meta\">\n      <span className=\"tag\">{`Season ${season}`}</span>\n      <span className=\"tag\">{`Posted on ${date}`}</span>\n      <span className=\"tag\">{tags.join(' / ')}</span>\n    </div>\n  </div>\n);\n\nEpisode.propTypes = {\n  image: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  audio: PropTypes.string.isRequired,\n  season: PropTypes.string.isRequired,\n  date: PropTypes.instanceOf(Date).isRequired,\n  tags: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default Episode;\n","import { graphql, navigate, useStaticQuery } from 'gatsby';\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '../Button/Button';\nimport Episode from './components/Episode/Episode';\n\nimport './episodes.scss';\n\nconst Episodes = ({ latest, title }) => {\n  const {\n    allEpisodesJson: { nodes: allEpisodes },\n  } = useStaticQuery(graphql`\n    {\n      allEpisodesJson {\n        nodes {\n          title\n          audio {\n            publicURL\n          }\n          date(formatString: \"MMM D, YYYY\")\n          tags\n          text\n          season\n          image {\n            publicURL\n          }\n        }\n      }\n    }\n  `);\n\n  // Create array of Episode components from list of json data episodes\n  const createEpisodes = (arr) => arr.map((episode) => {\n    const {\n      date, tags, text, season, image, audio,\n    } = episode;\n    return (\n      <Episode\n        key={episode.id}\n        title={episode.title}\n        date={date}\n        tags={tags}\n        text={text}\n        season={season}\n        image={image.publicURL}\n        audio={audio.publicURL}\n      />\n    );\n  });\n\n  // State for the list with initial first 3 episodes\n  const [episodes, setEpisodes] = useState(createEpisodes([...allEpisodes.slice(0, 3)]));\n\n  // State to trigger load more\n  const [loadMore, setLoadMore] = useState(false);\n\n  // State whether there is more to load\n  const [hasMore, setHasMore] = useState(allEpisodes.length > 3);\n\n  // Load more button click\n  const handleLoadMore = () => {\n    setLoadMore(true);\n  };\n\n  // Handle loading more episodes\n  useEffect(() => {\n    if (loadMore && hasMore) {\n      const currentLength = episodes.length;\n      const isMore = currentLength < allEpisodes.length;\n      const nextResults = isMore ? allEpisodes.slice(currentLength, currentLength + 3) : [];\n      setEpisodes([...episodes, ...createEpisodes([...nextResults])]);\n      setLoadMore(false);\n    }\n  }, [loadMore, hasMore]);\n\n  // Check if there is more\n  useEffect(() => {\n    const isMore = episodes.length < allEpisodes.length;\n    setHasMore(isMore);\n  }, [episodes]);\n\n  return episodes.length ? (\n    <section className=\"episodes-container\">\n      <div className=\"top\">\n        <h2 className={!latest ? 'single' : undefined}>{title}</h2>\n        {latest && (\n          <Button stylying=\"primary\" text=\"View All\" onClick={() => navigate('/episodes')} />\n        )}\n      </div>\n      {episodes}\n      {hasMore && (\n        <div className=\"more\">\n          <Button styling=\"secondary\" text=\"Show more episodes\" onClick={handleLoadMore} />\n        </div>\n      )}\n    </section>\n  ) : null;\n};\n\nEpisodes.propTypes = {\n  latest: PropTypes.bool,\n  title: PropTypes.string.isRequired,\n};\n\nEpisodes.defaultProps = {\n  latest: false,\n};\n\nexport default Episodes;\n","import { faArrowRight } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '../Button/Button';\n\nimport './subscribe.scss';\n\nconst ButtonText = ({ text, icon }) => (\n  <>\n    {text}\n    <FontAwesomeIcon icon={icon} />\n  </>\n);\n\nButtonText.propTypes = {\n  text: PropTypes.string.isRequired,\n  icon: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n};\n\nButtonText.defaultProps = {\n  icon: '',\n};\n\nconst Subscribe = ({ title, subtitle }) => (\n  <section className=\"subscribe\">\n    <h2>{title}</h2>\n    <p>{subtitle}</p>\n    <div className=\"cta-subscribe\">\n      <form action=\"\">\n        <input type=\"email\" placeholder=\"Type Your Email\" />\n        <Button\n          submit\n          stylying=\"primary\"\n          text={<ButtonText text=\"Subscribe \" icon={faArrowRight} />}\n        />\n      </form>\n    </div>\n  </section>\n);\n\nSubscribe.propTypes = {\n  title: PropTypes.string.isRequired,\n  subtitle: PropTypes.string.isRequired,\n};\n\nexport default Subscribe;\n"],"sourceRoot":""}