{"version":3,"sources":["webpack:///./src/pages/episodes/index.jsx","webpack:///./src/components/Episodes/components/Episode/Episode.jsx","webpack:///./src/components/Episodes/Episodes.jsx","webpack:///./src/components/PageLayout/PageLayout.jsx"],"names":["title","page","episodes","id","img","text","tags","Episode","image","audio","season","date","className","alt","src","AudioPlayer","join","propTypes","PropTypes","string","isRequired","instanceOf","Date","arrayOf","Episodes","latest","allEpisodes","useStaticQuery","allEpisodesJson","nodes","createEpisodes","arr","map","episode","key","publicURL","useState","slice","setEpisodes","loadMore","setLoadMore","length","hasMore","setHasMore","useEffect","currentLength","nextResults","isMore","undefined","Button","stylying","onClick","navigate","styling","bool","defaultProps","PageLayout","hero","children","oneOfType","node"],"mappings":"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","file":"component---src-pages-episodes-index-jsx-da78a1f97a94152e4daa.js","sourcesContent":["import React from 'react';\nimport Episodes from '../../components/Episodes/Episodes';\nimport PageLayout from '../../components/PageLayout/PageLayout';\n\nexport default () => {\n  const episodes = [\n    {\n      id: 0,\n      img: '/images/dog.png',\n      title: \"Visiting my best friend's city for first time\",\n      text:\n        'Lorem ipsum dolor sit amet, consetetur sadipscing elitr, diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam , sed diam voluptua.',\n      tags: ['Season 1', 'Posted on Sep 3, 2020', 'audio / goodbyes / life'],\n    },\n    {\n      id: 1,\n      img: '/images/book.png',\n      title: 'An interesting read I definitely recommend',\n      text:\n        'Lorem ipsum dolor sit amet, consetetur sadipscing elitr, diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam , sed diam voluptua.',\n      tags: ['Season 1', 'Posted on July 29, 2020', 'audio / goodbyes / life'],\n    },\n    {\n      id: 2,\n      img: '/images/door.png',\n      title: 'What if all my adventures go back home?',\n      text:\n        'Lorem ipsum dolor sit amet, consetetur sadipscing elitr, diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam , sed diam voluptua.',\n      tags: ['Season 1', 'Posted on Sep 11, 2020', 'audio / goodbyes / life'],\n    },\n    {\n      id: 3,\n      img: '/images/tower.png',\n      title: \"Visiting my best friend's city for first time\",\n      text:\n        'Lorem ipsum dolor sit amet, consetetur sadipscing elitr, diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam , sed diam voluptua.',\n      tags: ['Season 1', 'Posted on Sep 11, 2020', 'audio / goodbyes / life'],\n    },\n    {\n      id: 4,\n      img: '/images/field.png',\n      title: 'An interesting read I definitely recommend',\n      text:\n        'Lorem ipsum dolor sit amet, consetetur sadipscing elitr, diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam , sed diam voluptua.',\n      tags: ['Season 1', 'Posted on Sep 11, 2020', 'audio / goodbyes / life'],\n    },\n  ];\n\n  return (\n    <PageLayout title=\"Episodes\" page>\n      <Episodes title=\"All Podcast Episodes\" episodes={episodes} />\n    </PageLayout>\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport AudioPlayer from '../../../AudioPlayer/AudioPlayer';\n\nimport './_episode.scss';\n\nconst Episode = ({\n  image, title, text, audio, season, date, tags,\n}) => (\n  <div className=\"episode\">\n    <img alt=\"Episode\" src={image} />\n    <div className=\"episode-content\">\n      <h3>{title}</h3>\n      <p>{text}</p>\n      <AudioPlayer audio={audio} />\n    </div>\n    <div className=\"meta\">\n      <span className=\"tag\">{`Season ${season}`}</span>\n      <span className=\"tag\">{`Posted on ${date}`}</span>\n      <span className=\"tag\">{tags.join(' / ')}</span>\n    </div>\n  </div>\n);\n\nEpisode.propTypes = {\n  image: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  audio: PropTypes.string.isRequired,\n  season: PropTypes.string.isRequired,\n  date: PropTypes.instanceOf(Date).isRequired,\n  tags: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default Episode;\n","import { graphql, navigate, useStaticQuery } from 'gatsby';\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '../Button/Button';\nimport Episode from './components/Episode/Episode';\n\nimport './episodes.scss';\n\nconst Episodes = ({ latest, title }) => {\n  const {\n    allEpisodesJson: { nodes: allEpisodes },\n  } = useStaticQuery(graphql`\n    {\n      allEpisodesJson {\n        nodes {\n          title\n          audio {\n            publicURL\n          }\n          date(formatString: \"MMM D, YYYY\")\n          tags\n          text\n          season\n          image {\n            publicURL\n          }\n        }\n      }\n    }\n  `);\n\n  // Create array of Episode components from list of json data episodes\n  const createEpisodes = (arr) => arr.map((episode) => {\n    const {\n      date, tags, text, season, image, audio,\n    } = episode;\n    return (\n      <Episode\n        key={episode.id}\n        title={episode.title}\n        date={date}\n        tags={tags}\n        text={text}\n        season={season}\n        image={image.publicURL}\n        audio={audio.publicURL}\n      />\n    );\n  });\n\n  // State for the list with initial first 3 episodes\n  const [episodes, setEpisodes] = useState(createEpisodes([...allEpisodes.slice(0, 3)]));\n\n  // State to trigger load more\n  const [loadMore, setLoadMore] = useState(false);\n\n  // State whether there is more to load\n  const [hasMore, setHasMore] = useState(allEpisodes.length > 3);\n\n  // Load more button click\n  const handleLoadMore = () => {\n    setLoadMore(true);\n  };\n\n  // Handle loading more episodes\n  useEffect(() => {\n    if (loadMore && hasMore) {\n      const currentLength = episodes.length;\n      const isMore = currentLength < allEpisodes.length;\n      const nextResults = isMore ? allEpisodes.slice(currentLength, currentLength + 3) : [];\n      setEpisodes([...episodes, ...createEpisodes([...nextResults])]);\n      setLoadMore(false);\n    }\n  }, [loadMore, hasMore]);\n\n  // Check if there is more\n  useEffect(() => {\n    const isMore = episodes.length < allEpisodes.length;\n    setHasMore(isMore);\n  }, [episodes]);\n\n  return episodes.length ? (\n    <section className=\"episodes-container\">\n      <div className=\"top\">\n        <h2 className={!latest ? 'single' : undefined}>{title}</h2>\n        {latest && (\n          <Button stylying=\"primary\" text=\"View All\" onClick={() => navigate('/episodes')} />\n        )}\n      </div>\n      {episodes}\n      {hasMore && (\n        <div className=\"more\">\n          <Button styling=\"secondary\" text=\"Show more episodes\" onClick={handleLoadMore} />\n        </div>\n      )}\n    </section>\n  ) : null;\n};\n\nEpisodes.propTypes = {\n  latest: PropTypes.bool,\n  title: PropTypes.string.isRequired,\n};\n\nEpisodes.defaultProps = {\n  latest: false,\n};\n\nexport default Episodes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../Header/Header';\nimport Footer from '../Footer/Footer';\n\nconst PageLayout = ({\n  hero, page, title, children,\n}) => (\n  <>\n    <Header hero={hero} page={page} title={title} />\n    {children}\n    <Footer />\n  </>\n);\n\nPageLayout.propTypes = {\n  hero: PropTypes.bool,\n  page: PropTypes.bool,\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\n};\n\nPageLayout.defaultProps = {\n  hero: false,\n  page: true,\n};\n\nexport default PageLayout;\n"],"sourceRoot":""}